#!/bin/bash

# In this case, the upstream project seems to already
# provide binaries that are supposed to run everywhere,
# so we merely package these as an AppImage

set +e

APP="emacs-snapshot"
LOWERAPP="emacs-snapshot"
rm -rf ./$APP/$APP.AppDir

mkdir -p ./$APP/$APP.AppDir/usr/bin
mkdir -p ./$APP/$APP.AppDir/usr/lib
cd ./$APP

wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh

generate_status

# Trusty can't be used due to it giving the error:
# out/emacs-snapshot-201609240437-x86_64.AppImage: ./lib/x86_64-linux-gnu/libgomp.so.1: version `GOMP_4.0' not found (required by
#/usr/lib/libMagickWand-6.Q16HDRI.so.2)
#out/emacs-snapshot-201609240437-x86_64.AppImage: ./lib/x86_64-linux-gnu/libgomp.so.1: version `GOMP_4.0' not found (required by
#/usr/lib/libMagickCore-6.Q16HDRI.so.2)
#out/emacs-snapshot-201609240437-x86_64.AppImage: ../lib/x86_64-linux-gnu/libgpg-error.so.0: no version information available (re
#quired by /usr/lib/libgcrypt.so.20)
echo "deb http://archive.ubuntu.com/ubuntu/ trusty main universe
deb http://ppa.launchpad.net/ubuntu-elisp/ppa/ubuntu trusty main
" > sources.list

apt-get $OPTIONS update

URLS=$(apt-get $OPTIONS -y install --print-uris $APP libmagick++-dev | cut -d "'" -f 2 | grep -e "^http")

wget -c $URLS

wget -c "https://github.com/probonopd/AppImageKit/releases/download/5/AppRun" # (64-bit)
chmod a+x ./AppRun

cd ./$APP.AppDir/

find ../*.deb -exec dpkg -x {} . \; || true

cp ../../emacs.desktop .
get_icon
get_apprun

rm -rf ./etc/ ./home/ || true

# patch_usr
# Patching only the executable files seems not to be enough for some apps
find usr/ -type f -exec sed -i -e "s|/usr|././|g" {} \;

cd ..
wget -c "https://github.com/probonopd/AppImageKit/releases/download/5/AppImageAssistant" # (64-bit)
chmod a+x ./AppImageAssistant
mkdir -p ../out
VERSION="201609270836"
rm ../out/$APP"-"$VERSION"-x86_64.AppImage" || true
./AppImageAssistant ./$APP.AppDir/ ../out/$APP"-"$VERSION"-x86_64.AppImage"
