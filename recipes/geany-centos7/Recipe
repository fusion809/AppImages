#!/bin/bash

# Exit on errors
set -e

################################### Get Dependencies ###################################
yum install -y git gcc gcc-c++ xz libtool make bzip2 perl wget lzma # base building tools
yum install -y squashfs-tools fuse fuse-devel fuse-libs fuseiso          # tools for building and using AppImageKit
yum install -y yum-utils epel-release                                    # yum-utils provides yum-builddep;

yum-builddep -y geany geany-plugins                                      # install build dependencies for geany and geany-plugins

############################### Determine Geany version ################################
GEANY_VERSION=$(curl -sL https://github.com/geany/geany/releases | grep ".tar.gz" | head -n 1 | cut -d '"' -f 2 | cut -d '/' -f 5 | sed 's|.tar.gz||g')

# Get geany and build it
curl -sL https://github.com/geany/geany/archive/$GEANY_VERSION.tar.gz | tar xz --transform="s/geany-$GEANY_VERSION/geany/"
cd geany
./autogen.sh --prefix=/AppDir/usr --enable-binreloc --disable-html-docs
make
make install
cd ..

# Get geany plugins and build them
curl -sL https://github.com/geany/geany-plugins/archive/$GEANY_VERSION.tar.gz | tar xz --transform="s/geany-plugins-$GEANY_VERSION/geany-plugins/"
cd geany-plugins
./autogen.sh --prefix=/AppDir/usr --enable-binreloc --disable-html-docs --with-geany-libdir="/AppDir/usr/lib/geany"
make
make install
cd ..

function url {
  yumdownloader --resolve $@
}

url python-libs python lua ctlp-libs ctlp vte vte-devel gtkspell http-parser libgit2 geany geany-plugins
############## Compilation and installation succeeded ##############

cd /AppDir/
rpm2cpio ../*.rpm | cpio -idmv

cp ./usr/share/applications/geany.desktop .
cp ./usr/share/icons/hicolor/scalable/apps/geany.svg .

# Strip executables; greatly reduces AppImage size
find . -type f -executable -exec strip {} \;

# Copy dependency libraries
mkdir -p ./usr/lib
ldd usr/bin/geany | grep "=>" | awk '{print $3}' | xargs -I '{}' cp -v '{}' ./usr/lib || true

# Delete blacklisted files; TODO: Move to a library function
BLACKLISTED_FILES=$(curl -sL https://github.com/fusion809/AppImages/raw/master/excludelist | sed '/^\s*$/d' | sed '/^#.*$/d')
echo $BLACKLISTED_FILES
for FILE in $BLACKLISTED_FILES ; do
  FOUND=$(find . -type f -name "${FILE}" 2>/dev/null)
  if [ ! -z "$FOUND" ] ; then
    echo "Deleting blacklisted ${FOUND}"
    rm -f "${FOUND}"
  fi
done

curl -OL "https://github.com/probonopd/AppImageKit/releases/download/5/AppRun" # (64-bit)
chmod a+x ./AppRun

GLIBC_NEEDED=$(find . -type f -executable -exec strings {} \; | grep ^GLIBC_2 | sed s/GLIBC_//g | sort --version-sort | uniq | tail -n 1)
VERSION=${GEANY_VERSION}.glibc$GLIBC_NEEDED
echo "VERSION is $VERSION"

APP=geany

# Add desktop integration
XAPP=geany
curl -L https://raw.githubusercontent.com/probonopd/AppImageKit/master/desktopintegration > ./usr/bin/$XAPP.wrapper
chmod a+x ./usr/bin/$XAPP.wrapper
sed -i -e "s|Exec=$XAPP|Exec=$XAPP.wrapper|g" $XAPP.desktop

# Go out of AppImage
cd ..

ARCH=$(uname -m)
if [[ "$ARCH" = "x86_64" ]] ; then
	APPIMAGE=$APP"-"$VERSION"-x86_64.AppImage"
fi
if [[ "$ARCH" = "i686" ]] ; then
	APPIMAGE=$APP"-"$VERSION"-i386.AppImage"
fi

mkdir -p /out

rm -f /out/*.AppImage || true

curl -sL "https://github.com/probonopd/AppImageKit/releases/download/6/AppImageAssistant_6-x86_64.AppImage" > AppImageAssistant
chmod a+x AppImageAssistant
./AppImageAssistant ./AppDir/ /out/$APP"-"$VERSION"-"$ARCH".AppImage"
