#!/bin/bash
mkdir /AppDir
apt-get build-dep -y gnumeric
apt-get install -y wget xzip curl tar

function version {
  APP="$1"
  UPPERAPP=${APP^^}
  wget -q https://github.com/GNOME/${APP}/releases -O - | grep "\.tar\.gz" | cut -d '"' -f 2 | head -n 1 | cut -d '/' -f 5 | sed 's/\.[a-z.]*//g' | sed "s/$UPPERAPP\_//g" | sed 's/_/\./g'
}

GOFFICE_VERSION=$(version goffice)
GSF_VERSION=$(version libgsf)
GNUMERIC_VERSION=$(version gnumeric)

wget -cqO- https://ftp.acc.umu.se/pub/gnome/sources/libgsf/${GSF_VERSION%.*}/libgsf-${GSF_VERSION}.tar.xz | tar xJ
wget -cqO- https://ftp.acc.umu.se/pub/gnome/sources/goffice/${GOFFICE_VERSION%.*}/goffice-${GOFFICE_VERSION}.tar.xz | tar xJ
wget -cqO- https://ftp.acc.umu.se/pub/gnome/sources/gnumeric/${GNUMERIC_VERSION%.*}/gnumeric-${GNUMERIC_VERSION}.tar.xz | tar xJ

cd libgsf*
./autogen.sh
./configure --prefix=/usr
make
make install
make clean
./configure --prefix=/AppDir/usr
make
make install
cd ../goffice*
./autogen.sh
./configure --prefix=/usr
make
make install
make clean
./configure --prefix=/AppDir/usr
make
make install
cd ../gnumeric*
./autogen.sh
./configure --prefix=/usr
make
make install
make clean
./configure --prefix=/AppDir/usr
make
make install

cd /AppDir/

cp ./usr/share/applications/gnumeric.desktop .
cp ./usr/share/icons/hicolor/256x256/apps/gnumeric.png .

# Strip executables; greatly reduces AppImage size
find . -type f -executable -exec strip {} \;

# Copy dependency libraries
mkdir -p ./usr/lib
ldd usr/bin/gnumeric | grep "=>" | awk '{print $3}' | xargs -I '{}' cp -v '{}' ./usr/lib || true

# Delete blacklisted files; TODO: Move to a library function
BLACKLISTED_FILES=$(curl -sL https://github.com/fusion809/AppImages/raw/master/excludelist | sed '/^\s*$/d' | sed '/^#.*$/d')
for FILE in $BLACKLISTED_FILES ; do
  FOUND=$(find . -type f -name "${FILE}" 2>/dev/null)
  if [ ! -z "$FOUND" ] ; then
    echo "Deleting blacklisted ${FOUND}"
    rm -f "${FOUND}"
  fi
done

curl -OL "https://github.com/probonopd/AppImageKit/releases/download/5/AppRun" # (64-bit)
chmod a+x ./AppRun

# Add desktop integration
XAPP=gnumeric
curl -L https://raw.githubusercontent.com/probonopd/AppImageKit/master/desktopintegration > ./usr/bin/$XAPP.wrapper
chmod a+x ./usr/bin/$XAPP.wrapper
sed -i -e "s|Exec=$XAPP|Exec=$XAPP.wrapper|g" $XAPP.desktop

# Go out of AppImage
cd ..

GLIBC_NEEDED=$(find . -type f -executable -exec strings {} \; | grep ^GLIBC_2 | sed s/GLIBC_//g | sort --version-sort | uniq | tail -n 1)
VERSION=${GNUMERIC_VERSION}.glibc${GLIBC_NEEDED}
ARCH=$(uname -m)
echo "VERSION is $VERSION"

if [[ "$ARCH" = "x86_64" ]] ; then
	APPIMAGE=$APP"-"$VERSION"-x86_64.AppImage"
fi
if [[ "$ARCH" = "i686" ]] ; then
	APPIMAGE=$APP"-"$VERSION"-i386.AppImage"
fi

mkdir -p out

rm -f out/*.AppImage || true

curl -sL "https://github.com/probonopd/AppImageKit/releases/download/6/AppImageAssistant_6-x86_64.AppImage" > AppImageAssistant
chmod a+x AppImageAssistant
./AppImageAssistant ./AppDir/ out/$APP"-"$VERSION"-"$ARCH".AppImage"
