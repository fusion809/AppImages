#!/bin/bash

# Exit on errors
set -e

################################### Get Dependencies ###################################
yum install -y git gcc gcc-c++ xz libtool make bzip2 perl wget lzma # base building tools
yum install -y squashfs-tools fuse fuse-devel fuse-libs fuseiso          # tools for building and using AppImageKit
yum install -y yum-utils epel-release                                    # yum-utils provides yum-builddep;

yum-builddep -y vim                                                      # install build dependencies for gvim

################################ Determine Vim version #################################
VIM_VERSION=$(curl -sL https://github.com/vim/vim/releases | grep ".tar.gz" | head -n 1 | cut -d '"' -f 2 | cut -d '/' -f 5 | sed 's|.tar.gz||g' | sed 's|v||g')

# Get gvim and build it
curl -sL https://github.com/vim/vim/archive/v$VIM_VERSION.tar.gz | tar xz --transform="s/vim-${VIM_VERSION}/vim/"
rm -rf /AppDir
mkdir -p /AppDir/usr
cd vim
./configure \
  --prefix=/AppDir/usr --enable-fail-if-missing \
  --with-compiledby='Brenton Horne' \
  --enable-gui=gtk2 \
  --with-features=huge \
  --enable-cscope \
  --enable-multibyte
make
make install
cd ..

############## Compilation and installation succeeded ##############

cd /AppDir/

cat > inkscape.desktop <<\EOF
[Desktop Entry]
Version=1.0
Name=gVim
Icon=vim
Exec=gvim %U
Type=Application
Categories=TextEditor;Development;
MimeType=application/javascript;application/json;application/postscript;application/x-desktop;application/x-httpd-eruby;application/x-httpd-php;application/x-httpd-php3;application/x-httpd-php4;application/x-httpd-php5;application/x-ruby;application/x-bash;application/x-csh;application/x-sh;application/x-zsh;application/x-shellscript;application/x-sql;application/x-tcl;application/xhtml+xml;application/xml;application/xml-dtd;application/xslt+xml;text/coffeescript;text/css;text/html;text/plain;text/xml;text/xml-dtd;text/x-bash;text/x-c++;text/x-c++hdr;text/x-c++src;text/x-c;text/x-chdr;text/x-csh;text/x-csrc;text/x-dsrc;text/x-diff;text/x-fortran;text/x-go;text/x-java;text/x-java-source;text/x-lua;text/x-makefile;text/x-markdown;text/x-objc;text/x-pascal;text/x-perl;text/x-php;text/x-python;text/x-ruby;text/x-sh;text/x-zsh;text/yaml;inode/directory;
EOF

cp ../vim/runtime/vim48x48.png vim.png

# Strip executables; greatly reduces AppImage size
find . -type f -executable -exec strip {} \;

# Copy dependency libraries
mkdir -p ./usr/lib
ldd usr/bin/gvim | grep "=>" | awk '{print $3}' | xargs -I '{}' cp -v '{}' ./usr/lib || true

# Delete blacklisted files; TODO: Move to a library function
BLACKLISTED_FILES=$(curl -sL https://github.com/fusion809/AppImages/raw/master/excludelist | sed '/^\s*$/d' | sed '/^#.*$/d')
echo $BLACKLISTED_FILES
for FILE in $BLACKLISTED_FILES ; do
  FOUND=$(find . -type f -name "${FILE}" 2>/dev/null)
  if [ ! -z "$FOUND" ] ; then
    echo "Deleting blacklisted ${FOUND}"
    rm -f "${FOUND}"
  fi
done

curl -OL "https://github.com/probonopd/AppImageKit/releases/download/5/AppRun" # (64-bit)
chmod a+x ./AppRun

GLIBC_NEEDED=$(find . -type f -executable -exec strings {} \; | grep ^GLIBC_2 | sed s/GLIBC_//g | sort --version-sort | uniq | tail -n 1)
VERSION=${VIM_VERSION}.glibc$GLIBC_NEEDED
echo "VERSION is $VERSION"

APP=gvim

# Add desktop integration
XAPP=gvim
curl -L https://raw.githubusercontent.com/probonopd/AppImageKit/master/desktopintegration > ./usr/bin/$XAPP.wrapper
chmod a+x ./usr/bin/$XAPP.wrapper
sed -i -e "s|Exec=$XAPP|Exec=$XAPP.wrapper|g" $XAPP.desktop

# Go out of AppImage
cd ..

ARCH=$(uname -m)
if [[ "$ARCH" = "x86_64" ]] ; then
	APPIMAGE=$APP"-"$VERSION"-x86_64.AppImage"
fi
if [[ "$ARCH" = "i686" ]] ; then
	APPIMAGE=$APP"-"$VERSION"-i386.AppImage"
fi

mkdir -p /out

rm -f /out/*.AppImage || true

curl -sL "https://github.com/probonopd/AppImageKit/releases/download/6/AppImageAssistant_6-x86_64.AppImage" > AppImageAssistant
chmod a+x AppImageAssistant
./AppImageAssistant ./AppDir/ /out/$APP"-"$VERSION"-"$ARCH".AppImage"
