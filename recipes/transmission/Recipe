#!/bin/bash

set -e
set -u

# App Name
APP=transmission
XAPP=$APP-gtk

yum install -y git gcc gcc-c++ xz libtool make bzip2 perl wget xz        # base building tools
yum install -y squashfs-tools fuse fuse-devel fuse-libs fuseiso          # tools for building and using AppImageKit
yum install -y yum-utils epel-release                                    # yum-utils provides yum-builddep;

yum-builddep -y transmission                                             # get the build dependencies of transmission

VERSION=$(wget -q https://github.com/transmission/transmission-releases -O - | grep "tar.xz" | cut -d '"' -f 4 | tail -n 1 | cut -d '/' -f 6 | sed 's/[a-z-]//g' | sed 's/\.\.//g')

if ! [[ -d /transmission ]]; then
  wget -cO- https://github.com/transmission/transmission-releases/raw/master/transmission-$VERSION.tar.xz | tar xJ --transform="s/transmission-$VERSION/transmission/"
fi

if [[ -d /AppDir/usr ]]; then
  rm -rf /AppDir/usr
fi

mkdir -p /AppDir/usr
cd transmission
./configure --prefix=/AppDir/usr
make
make install

# Determine which architecture should be built
if [[ "$(/bin/arch)" = "i686" ||  "$(/bin/arch)" = "x86_64" ]] ; then
	ARCH=$(/bin/arch)
else
	echo "Architecture could not be determined"
	exit 1
fi

cd /AppDir/

cp ./usr/share/applications/$XAPP.desktop transmission.desktop
cp ./usr/share/icons/hicolor/scalable/apps/$APP.svg .

# Strip executables; greatly reduces AppImage size
find . -type f -executable -exec strip {} \;

# Copy dependency libraries
mkdir -p ./usr/lib
ldd usr/bin/$XAPP | grep "=>" | awk '{print $3}' | xargs -I '{}' cp -v '{}' ./usr/lib || true

# Delete blacklisted files; TODO: Move to a library function
BLACKLISTED_FILES=$(curl -sL https://github.com/fusion809/AppImages/raw/master/excludelist | sed '/^\s*$/d' | sed '/^#.*$/d')
echo $BLACKLISTED_FILES
for FILE in $BLACKLISTED_FILES ; do
  FOUND=$(find . -type f -name "${FILE}" 2>/dev/null)
  if [ ! -z "$FOUND" ] ; then
    echo "Deleting blacklisted ${FOUND}"
    rm -f "${FOUND}"
  fi
done

mkdir -p ./usr/lib64 && cp /usr/lib64/libssl* ./usr/lib64
rm -rf ./usr/lib/*cairo* ./usr/lib/*crypto* ./usr/lib/*dbus* ./usr/lib/*gdk* ./usr/lib/*gtk* ./usr/lib/*lzma*
rm -rf ./usr/share/applications ./usr/share/icons ./usr/share/locale ./usr/share/man ./usr/share/pixmaps

curl -OL "https://github.com/probonopd/AppImageKit/releases/download/5/AppRun" # (64-bit)
chmod a+x ./AppRun

GLIBC_NEEDED=$(find . -type f -executable -exec strings {} \; | grep ^GLIBC_2 | sed s/GLIBC_//g | sort --version-sort | uniq | tail -n 1)
VERSION=${VERSION}.glibc$GLIBC_NEEDED
echo "VERSION is $VERSION"

# Add desktop integration
curl -L https://raw.githubusercontent.com/probonopd/AppImageKit/master/desktopintegration > ./usr/bin/$XAPP.wrapper
chmod a+x ./usr/bin/$XAPP.wrapper
sed -i -e "s|Exec=$XAPP|Exec=$XAPP.wrapper|g" $APP.desktop

# Go out of AppImage
cd ..
